{"version":3,"sources":["actions/errorActions.js","actions/authActions.js","components/auth/Signout.js","components/layout/AppNavbar.js","components/library/BookList.js","actions/bookActions.js","components/library/Library.js","components/auth/Signup.js","components/auth/Signin.js","components/home/NotificationBoard.js","components/home/NewPostModal.js","components/home/BlockQuote.js","components/home/PostDetails.js","actions/postActions.js","components/home/Feed.js","components/home/Home.js","components/explore/Explore.js","components/profile/BookShelve.js","components/profile/Activity.js","components/profile/Profile.js","reducers/bookReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/postReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","tokenConfig","getState","token","auth","config","headers","Signout","NavLink","onClick","this","props","signout","href","Component","connect","AppNavbar","state","isOpen","toggle","setState","isAuthenticated","user","authLinks","NavItem","Button","color","className","name","guestLinks","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","BookList","books","deleteBook","useState","activeTab","setActiveTab","handleDelete","e","book","target","value","_id","tabs","map","index","key","classnames","active","tab","Card","CardImg","top","src","cover","alt","TabContent","TabPane","tabId","amazon_link","title","author","highlights","length","ListGroup","highlight","ListGroupItem","getBooks","dispatch","setBooksLoading","axios","get","then","res","data","catch","err","response","addBooks","post","Library","alert","to","fetchBooks","console","log","delete","Signup","email","password","handleChange","handleSubmit","preventDefault","newUser","signup","prevProps","error","Alert","Form","onSubmit","FormGroup","Label","for","Input","onChange","placeholder","body","JSON","stringify","Signin","signin","NotificationBoard","flush","disabled","tag","NewPostModal","modal","bookDropdownOpen","highlightDropdownOpen","bookToShare","highlightToShare","comment","openPostModal","toggleBookDropDown","toggleHighlightDropDown","handleCommentChange","newPost","username","book_id","highlight_author","addPost","Modal","ModalBody","ModalFooter","InputGroup","InputGroupButtonDropdown","addonType","DropdownToggle","caret","DropdownMenu","DropdownItem","readOnly","BlockQuote","highlightAuthor","PostDetails","Toast","ToastHeader","ToastBody","setPostsLoading","Feed","getPosts","posts","Home","Row","Col","xs","Explore","loading","setLoading","Spinner","BookShelve","Media","left","object","heading","Activity","Profile","size","getPostsByUserId","sm","userId","params","initialState","localStorage","getItem","isLoading","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.730eb7cf.chunk.js","sourcesContent":["// RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n    return {\n        type: 'GET_ERRORS',\n        payload: { msg, status, id }\n    }\n}\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n    return { type: 'CLEAR_ERRORS' }\n}","import axios from 'axios';\nimport { returnErrors } from './errorActions';\n\n// check token and load user\nexport const loadUser = () => (dispatch, getState) => {\n    dispatch({ type: 'USER_LOADING' });\n\n    axios.get('/auth/user', tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'USER_LOADED',\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({ type: 'AUTH_ERROR' })\n        })\n}\n\n// register user\nexport const signup = ({ name, email, password }) => dispatch => {\n    const config = {\n        headers: {\n            'Content-type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ name, email, password });\n\n    axios.post('/users', body, config)\n        .then(res => dispatch({ \n            type: 'SIGNUP_SUCCESS',\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'SIGNUP_FAIL'))\n            dispatch({ type: 'SIGNUP_FAIL' });\n        })\n}\n\nexport const signin = ({ email, password }) => dispatch => {\n    const config = {\n        headers: {\n            'Content-type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ email, password });\n\n    axios.post('/auth', body, config)\n        .then(res => dispatch({ \n            type: 'SIGNIN_SUCCESS',\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'SIGNIN_FAIL'))\n            dispatch({ type: 'SIGNIN_FAIL' });\n        })\n}\n\n\nexport const signout =  () => {\n    return { type: 'SIGNOUT_SUCCESS' }\n}\n\n\n// setup config/headers and token\nexport const tokenConfig = getState => {\n    // get token from local storage\n    const token = getState().auth.token;\n\n    // headers\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\",\n        }\n    }\n\n    if(token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return config;\n}","import React, { Component, Fragment } from 'react'\nimport { NavLink } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { signout } from '../../actions/authActions'\nimport PropTypes from 'prop-types'\n\nclass Signout extends Component {\n    static propTypes = {\n        signout: PropTypes.func.isRequired\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <NavLink onClick={this.props.signout} href='/'>Sign Out</NavLink>\n            </Fragment>\n        )\n    }\n}\n\n\n\nexport default connect(null, { signout })(Signout);","import React, { Component, Fragment } from 'react'\nimport { \n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container,\n    Button\n} from 'reactstrap'\nimport Signout from '../auth/Signout'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nclass AppNavbar extends Component {\n    state = {\n            isOpen: false\n    }\n\n    static propTypes = {\n        auth: PropTypes.object.isRequired\n    }\n\n    toggle = () => {\n        this.setState({ isOpen: !this.state.isOpen })\n    }\n\n    render() {\n        const { isAuthenticated, user } = this.props.auth;\n        const authLinks = (\n            <Fragment>\n                <NavItem>\n                    <NavLink href=\"/\">Home</NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink href=\"/library\">Library</NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink href=\"/explore\">Explore</NavLink>\n                </NavItem>\n                <NavItem>\n                    <Signout />\n                </NavItem>\n                <NavItem>\n                    <Button href=\"/profile\" color=\"warning\" className=\"ml-4\">{ user ? user.name[0] : '' }</Button>\n                </NavItem>\n            </Fragment>\n        )\n        const guestLinks = (\n            <Fragment>\n                <NavItem>\n                    <NavLink href=\"/sign-up\">Sign Up</NavLink>\n                </NavItem>                \n                <NavItem>\n                    <NavLink href=\"/sign-in\">Sign In</NavLink>\n                </NavItem>\n            </Fragment>\n        )\n        return (\n            <div>\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n                    <Container>\n                        <NavbarBrand href=\"/\">KindleShare</NavbarBrand>\n                        <NavbarToggler onClick={this.toggle} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav className=\"ml-auto\" navbar>\n                                { isAuthenticated ? authLinks : guestLinks }\n                            </Nav>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, null)(AppNavbar);","import React, { useState } from 'react'\nimport {\n    Container,\n    Card,\n    CardImg,\n    TabPane,\n    ListGroup,\n    ListGroupItem,\n    NavLink,\n    TabContent,\n    Nav,\n    NavItem,\n    Button\n} from 'reactstrap';\nimport classnames from 'classnames';\n\nfunction BookList(props) {\n    const { books, deleteBook } = props;\n    const [activeTab, setActiveTab] = useState('1');\n\n    const toggle = tab => {\n        if(activeTab !== tab) setActiveTab(tab);\n    }\n    \n    const handleDelete = (e) => {\n        const book = books[e.target.value]\n        deleteBook(book._id);\n    }\n\n    return (\n        <div>\n            <Nav className=\"scrolling-wrapper\" tabs>\n                {books.map((book, index) => (\n                    <NavItem className=\"book-card\" key={index}>\n                        <NavLink className={classnames({ active: activeTab === index })} onClick={() => {toggle(index);}}>\n                            <Button onClick={handleDelete} value={index} className=\"book-delete-btn\" color=\"danger\">x</Button>\n                            <Card>\n                                <CardImg top src={book.cover} alt=\"book cover\" />\n                            </Card>\n                        </NavLink>\n                    </NavItem>\n                ))}\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                {books.map((book, index) => (\n                    <TabPane key={index} tabId={index}>\n                        <Container>\n                            <Button className=\"mb-3\" target=\"_blank\" href={book.amazon_link} color=\"warning\">See it on amazon</Button>\n                            <br />\n                            {book.title} \n                            <br />\n                            {book.author}\n                            <br />\n                            {book.highlights.length} Highlights\n                        </Container>\n                        <ListGroup>\n                            {book.highlights.map((highlight, index) => (\n                                <ListGroupItem key={index}>{ highlight }</ListGroupItem>\n                            ))}\n                        </ListGroup>\n                    </TabPane>\n                ))}\n            </TabContent>\n        </div>\n    )\n}\n\nexport default BookList;","import axios from 'axios';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\n\nexport const getBooks = () => (dispatch, getState) => {\n    dispatch(setBooksLoading());\n    axios.get('/books', tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'GET_BOOKS',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const fetchBooks = () => dispatch => {\n    axios.get('/books/kindle')\n        .then(res => {\n            dispatch(addBooks(res.data)); // Posting new books to database\n        })\n        .catch(err => console.log(err))\n}\n\nexport const addBooks = books => (dispatch, getState) => {\n    books.map(book => axios.post('/books', book, tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'ADD_BOOKS',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n    )\n};\n\nexport const deleteBook = id => (dispatch, getState) => {\n    axios.delete(`/books/${id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: 'DELETE_BOOK', payload: id\n            })\n        })\n}\n\nexport const setBooksLoading = () => {\n    return {\n        type: 'BOOKS_LOADING'\n    }\n}","import React, { Component } from 'react'\nimport { Container, Button } from 'reactstrap';\nimport BookList from './BookList';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { getBooks, fetchBooks, deleteBook } from '../../actions/bookActions';\nimport PropTypes from 'prop-types';\n\nclass Library extends Component {\n    static propTypes = {\n        getBooks: PropTypes.func.isRequired,\n        deleteBook: PropTypes.func.isRequired,\n        fetchBooks: PropTypes.func.isRequired,\n        books: PropTypes.object.isRequired,\n        isAuthenticated: PropTypes.bool\n    }\n\n    componentDidMount() {\n        this.props.getBooks();\n    }\n\n    onClick = () => {\n        // this.props.fetchBooks();\n        alert(\"This feature isn't available yet\")\n    }\n\n    render() {\n        if (!this.props.token) return <Redirect to=\"/login\"/>\n        const { books } = this.props.books;\n        return (\n            <Container>\n                <Button color=\"warning\" onClick={this.onClick}>Sync highlights</Button>\n                <br />\n                <br />\n                {books.length > 0 ? <BookList deleteBook={this.props.deleteBook} books={ books }/> : null}\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    books: state.book,\n    token: state.auth.token,\n\n})\n\nexport default connect(mapStateToProps, { getBooks, fetchBooks, deleteBook })(Library);","import React, { Component } from 'react';\nimport { Container, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { signup } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions'\n\nclass Signup extends Component {\n    state = {\n        name: '',\n        email: '',\n        password: '',\n        msg: null\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        signup: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error } = this.props;\n        if(error !== prevProps.error) {\n            if(error.id === 'SIGNUP_FAIL') {\n                this.setState({ msg: error.msg.msg })\n            } else {\n                this.setState({ msg: null })\n            }\n        }\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        this.props.clearErrors();\n        e.preventDefault();\n        const { name, email, password } = this.state;\n        const newUser = {\n            name,\n            email,\n            password\n        };\n        this.props.signup(newUser);\n    }\n\n    render() {\n        if (this.props.isAuthenticated) return <Redirect to=\"/\"/>\n        return (\n            <Container>\n                {  this.state.msg ? <Alert color=\"danger\">{ this.state.msg }</Alert> : null }\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"name\">Name</Label>\n                        <Input onChange={this.handleChange} type=\"name\" name=\"name\" placeholder=\"Name\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"name\">Email</Label>\n                        <Input onChange={this.handleChange} type=\"email\" name=\"email\" placeholder=\"Email\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\">Pasword</Label>\n                        <Input onChange={this.handleChange} type=\"password\" name=\"password\" placeholder=\"Password\" />\n                    </FormGroup>\n                    <Button>Submit</Button>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\n\nexport default connect(mapStateToProps, { signup, clearErrors })(Signup);","import React, { Component } from 'react';\nimport { Container, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { signin } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions'\n\nclass Signin extends Component {\n    state = {\n        email: '',\n        password: '',\n        msg: null\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        signin: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error } = this.props;\n        if(error !== prevProps.error) {\n            if(error.id === 'SIGNIN_FAIL') {\n                this.setState({ msg: error.msg.msg })\n            } else {\n                this.setState({ msg: null })\n            }\n        }\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        this.props.clearErrors();\n        e.preventDefault();\n        const { email, password } = this.state;\n        const user = {\n            email,\n            password\n        };\n        this.props.signin(user);\n    }\n\n    render() {\n        if (this.props.isAuthenticated) return <Redirect to=\"/\"/>\n        return (\n            <Container>\n                {  this.state.msg ? <Alert color=\"danger\">{ this.state.msg }</Alert> : null }\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"name\">Email</Label>\n                        <Input onChange={this.handleChange} type=\"email\" name=\"email\" placeholder=\"Email\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\">Pasword</Label>\n                        <Input onChange={this.handleChange} type=\"password\" name=\"password\" placeholder=\"Password\" />\n                    </FormGroup>\n                    <Button>Login</Button>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\n\nexport default connect(mapStateToProps, { signin, clearErrors })(Signin);","import React from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\n\nfunction NotificationBoard() {\n    return (\n        <Container>\n            <ListGroup flush>\n                <ListGroupItem disabled tag=\"a\" href=\"#\">Othmane followed you</ListGroupItem>\n                <ListGroupItem disabled tag=\"a\" href=\"#\">Othmane responded to your post</ListGroupItem>\n                <ListGroupItem disabled tag=\"a\" href=\"#\">Bill Gates has added a book to his library</ListGroupItem>\n            </ListGroup>\n        </Container>\n    )\n}\n\n\nexport default NotificationBoard;","import React, { Component } from 'react'\nimport {\n    Modal,\n    ModalBody,\n    ModalFooter,\n    InputGroup,\n    InputGroupButtonDropdown,\n    Input,\n    Button,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n   } from 'reactstrap';\n\nclass NewPostModal extends Component {\n    state = {\n        modal: false,\n        bookDropdownOpen: false,\n        highlightDropdownOpen: false,\n        bookToShare: null,\n        highlightToShare: \"\",\n        comment: \"\"\n    }\n\n    openPostModal = () => {\n        this.setState({ modal: !this.state.modal });\n    }\n\n    toggleBookDropDown = () => {\n        this.setState({ bookDropdownOpen: !this.state.bookDropdownOpen })\n    }\n    toggleHighlightDropDown = () => {\n        this.setState({ highlightDropdownOpen: !this.state.highlightDropdownOpen });\n    }\n\n    handleCommentChange = e => {\n        this.setState({ comment: e.target.value });\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        // send the post to database!\n        const newPost = {\n            username: this.props.user.name,\n            book_id: this.state.bookToShare.book_id,\n            highlight_author: this.state.bookToShare.author,\n            highlight: this.state.highlightToShare,\n            comment: this.state.comment\n        }\n        this.props.addPost(newPost);\n\n        this.setState({\n            bookToShare: null,\n            highlightToShare: \"\",\n            comment: \"\",\n            modal: false\n        })\n        console.log(newPost);\n    }\n\n    render(){\n        const books = this.props.books;\n        const { bookToShare, highlightToShare } = this.state;\n        return (\n        <div>\n            <Button color=\"warning\" onClick={this.openPostModal}>Share insight</Button>\n            <Modal isOpen={this.state.modal} toggle={this.openPostModal}>\n                {/* <ModalHeader toggle={this.openPostModal}>Title</ModalHeader> */}\n                <ModalBody>   \n                        <blockquote>\n                            { bookToShare ? \n                                <div>\n                                    <p className=\"highlight\">{highlightToShare}</p>\n                                    <footer>- {bookToShare.author}</footer>\n                                </div>\n                                : null }\n                        </blockquote>\n                    <Input onChange={this.handleCommentChange} value={this.state.comment} placeholder=\"Share your thoughts...\" />\n                </ModalBody>\n                <ModalFooter>\n                    <InputGroup>\n                        <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.bookDropdownOpen} toggle={this.toggleBookDropDown}>\n                            <DropdownToggle caret>\n                                Choose a Book\n                            </DropdownToggle>\n                            <DropdownMenu className=\"drop-down-menu\">\n                                { books.map(book => (\n                                        <DropdownItem onClick={() => this.setState({ bookToShare: book })} key={book.book_id}>{book.title}</DropdownItem>\n                                    ))\n                                }\n                            </DropdownMenu>\n                        </InputGroupButtonDropdown>\n                        <Input readOnly value={bookToShare ? bookToShare.title : \"\"} />\n                    </InputGroup>\n\n                    <InputGroup>\n                        <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.highlightDropdownOpen} toggle={this.toggleHighlightDropDown}>\n                            <DropdownToggle caret>\n                                Choose a Highlight\n                            </DropdownToggle>\n                            <DropdownMenu className=\"drop-down-menu\" >\n                                {\n                                    bookToShare ? bookToShare.highlights.map((highlight, index) => (\n                                        <DropdownItem key={index} onClick={() => this.setState({ highlightToShare: highlight })} >\n                                            {highlight}\n                                        </DropdownItem>\n                                    )) \n                                    : <DropdownItem disabled>Choose a book first</DropdownItem>\n                                }\n                            </DropdownMenu>\n                        </InputGroupButtonDropdown>\n                        <Button className=\"ml-3\" onClick={this.handleSubmit} color=\"secondary\">Share</Button>\n                    </InputGroup>\n                </ModalFooter>\n            </Modal>\n\n            \n        </div>\n        )}\n  }\n\nexport default NewPostModal;","import React from 'react'\n\nfunction BlockQuote(props) {\n    const { highlight, highlightAuthor } = props;\n    return (\n        <div>\n            <blockquote>\n                <h2 className=\"highlight\">{highlight}</h2>\n                <footer>{highlightAuthor}</footer>\n            </blockquote>\n        </div>\n    )\n}\n\nexport default BlockQuote;","import React from \"react\";\nimport {\n  Toast,\n  ToastBody,\n  ToastHeader,\n} from \"reactstrap\";\nimport BlockQuote from \"./BlockQuote\";\n\nfunction PostDetails({ post }) {\n  return (\n    <Toast>\n      <ToastHeader>{post.username ? post.username : \"anonymous\"}</ToastHeader>\n      <ToastBody>\n        <BlockQuote\n          highlight={post.highlight}\n          highlightAuthor={post.highlight_author}\n        />\n        <h4 className=\"comment\">{post.comment}</h4>\n      </ToastBody>\n    </Toast>\n  );\n}\n\nexport default PostDetails;\n","import axios from 'axios';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\n\nexport const getPosts = () => (dispatch, getState) => {\n    dispatch(setPostsLoading());\n    axios.get('/posts', tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'GET_POSTS',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const getPostsByUserId = userId => (dispatch, getState) => {\n    dispatch(setPostsLoading());\n    axios.get('/posts', { params: { userId: userId } }, tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'GET_POSTS',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const addPost = post => (dispatch, getState) => {\n    axios.post('/posts', post, tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'ADD_POST',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n};\n\nexport const setPostsLoading = () => {\n    return {\n        type: 'POSTS_LOADING'\n    }\n}","import React, { Component } from 'react'\nimport { Container } from 'reactstrap'\nimport NewPostModal from './NewPostModal'\nimport PostDetails from './PostDetails';\nimport { connect } from 'react-redux'\nimport { getBooks } from '../../actions/bookActions'\nimport { getPosts, addPost } from '../../actions/postActions'\nimport PropTypes from 'prop-types'\n\nclass Feed extends Component {\n    static propTypes = {\n        auth: PropTypes.object.isRequired,\n        books: PropTypes.object.isRequired,\n        posts: PropTypes.object.isRequired,\n        getBooks: PropTypes.func.isRequired,\n        getPosts: PropTypes.func.isRequired,\n        addPost: PropTypes.func.isRequired\n    }\n\n    componentDidMount() {\n        this.props.getBooks();\n        this.props.getPosts();\n    }\n\n    render() {\n        const { books } = this.props.books;\n        const { posts } = this.props.posts;\n        return (\n            <Container className=\"feed\">\n                <NewPostModal books={books} addPost={this.props.addPost} user={this.props.auth.user} />\n                <br />\n                <div className=\"toast-block\">\n                    { posts.map(post => (\n                        <PostDetails key={post._id} post={post} />\n                    ))}\n                </div>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    books: state.book,\n    posts: state.post,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getBooks, getPosts, addPost })(Feed);","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport NotificationBoard from './NotificationBoard';\nimport Feed from './Feed';\n\nclass Home extends Component {\n    static propTypes = {\n        isAuthenticated: PropTypes.bool\n    }\n\n    render() {\n        if (!this.props.isAuthenticated) return <Redirect to=\"/sign-in\"/>\n        return (\n            <Container>\n                <Row>\n                    <Col xs=\"8\">\n                        <Feed />\n                    </Col>\n                    <Col xs=\"4\">\n                        <NotificationBoard />\n                    </Col>\n                </Row>\n                <br />\n                <br />\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Home);","import React, { Component } from \"react\";\nimport {\n  Container,\n  Input,\n  Spinner\n} from \"reactstrap\";\n\nclass Explore extends Component {\n    state = {\n        loading: false\n    }\n\n    setLoading = e => {\n        e.preventDefault();\n        this.setState({ loading: !this.state.loading });\n    }\n\n    render() {\n        return (\n            <Container>\n                <form onSubmit={this.setLoading}>\n                    <Input placeholder=\"Search ...\" />\n                </form>\n                <br />\n                { this.state.loading ? \n                    <Container><Spinner color=\"warning\" /></Container> : null \n                }\n            </Container>\n    );\n  }\n}\n\nexport default Explore;\n","import React from 'react'\nimport { ListGroup, ListGroupItem, Media } from 'reactstrap'\n\nfunction BookShelve({ books }) {\n    return (\n        <ListGroup>\n            { books.map(book => (\n                <ListGroupItem key={book._id} >\n                     <Media>\n                        <Media left target=\"_blank\" href={book.amazon_link}>\n                            <Media className=\"mr-3\" object src={book.cover} alt=\"book cover\" />\n                        </Media>\n                        <Media body>\n                            <Media heading>\n                                {book.title}\n                            </Media>\n                            <p>{book.author}</p>\n                        </Media>\n                    </Media>\n                </ListGroupItem>\n            )) }\n        </ListGroup>\n    )\n}\n\nexport default BookShelve;","import React from 'react'\nimport PostDetails from '../home/PostDetails';\n\nfunction Activity({ posts }) {\n    return (\n        <div>\n            {posts.map(post => (\n                <PostDetails post={post} />\n            ))}\n        </div>\n    )\n}\n\nexport default Activity;","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Spinner, Button, Container, Media, NavLink, NavItem, TabContent, TabPane, Nav, Row, Col } from 'reactstrap'\nimport classnames from 'classnames';\nimport BookShelve from './BookShelve';\nimport Activity from './Activity';\nimport { connect } from 'react-redux';\nimport { getBooks } from '../../actions/bookActions';\nimport { getPostsByUserId } from '../../actions/postActions';\nimport PropTypes from 'prop-types'\n\nclass Profile extends Component {\n    state = {\n        activeTab: '1',\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        auth: PropTypes.object.isRequired,\n        book: PropTypes.object.isRequired,\n        post: PropTypes.object.isRequired,\n        getBooks: PropTypes.func.isRequired,\n        getPostsByUserId: PropTypes.func.isRequired,\n    }\n\n    componentDidMount(){\n        this.props.getBooks();\n    }\n\n    toggle = tab => {\n        if(this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n\n    render() {\n        const toggle = this.toggle;\n        const activeTab = this.state.activeTab;\n        const { books } = this.props.book;\n        const { posts } = this.props.post;\n        if (this.props.auth.user == null){\n            return <Container><Spinner color=\"warning\" /></Container>;\n        } else {\n            if (this.props.isAuthenticated === false) return <Redirect to=\"/sign-in\"/>\n        return (\n            <Container>\n                <Media className=\"profile-description\">\n                    <Media left>\n                        <Media className=\"profile-image\" object src=\"https://pbs.twimg.com/profile_images/988775660163252226/XpgonN0X_400x400.jpg\" alt=\"Profile image\" />\n                    </Media>\n                    <Media body>\n                        <Media heading>\n                            Bill Gates\n                        </Media>\n                        <p>\n                            I'm a book lover. I regularly schedule off weeks that I dedicate to reading and catching up on my \"To Read List\".\n                            <br />Follow me and you'll get exclusive access to my library\n                        </p>\n                        <Button className=\"follow-btn\" size=\"lg\" color=\"warning\">Follow</Button>\n                    </Media>\n                </Media>\n                <div>\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: activeTab === '1' })}\n                                onClick={() => { toggle('1'); }}\n                            >\n                                Library\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '2' })}\n                            onClick={() => { \n                                toggle('2');\n                                this.props.getPostsByUserId(this.props.auth.user._id)\n                            }}\n                        >\n                            Posts\n                        </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm=\"12\">\n                                <BookShelve books={books} />\n                            </Col>\n                        </Row>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                        <Row>\n                            <Col sm=\"12\">\n                                <Activity posts={posts} />\n                            </Col>\n                        </Row>\n                        </TabPane>\n                    </TabContent>\n                </div>\n            </Container>\n        )}\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    auth: state.auth,\n    book: state.book,\n    post: state.post,\n})\n\nexport default connect(mapStateToProps, { getBooks, getPostsByUserId })(Profile);","const initialState = {\n    books: [],\n    loading: false // time to fetch data\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case 'GET_BOOKS':\n            return {\n                ...state,\n                books: action.payload,\n                loading: false\n            };\n        // case 'FETCH_BOOKS':\n        //     return {\n        //         ...state,\n        //         books: action.payload\n        //     };\n        case 'ADD_BOOKS':\n            return {\n                ...state,\n                books: [action.payload, ...state.books]\n            };\n        case 'DELETE_BOOK':\n            return {\n                ...state,\n                books: state.books.filter(book => book._id !==action.payload)\n            }\n        case 'BOOKS_LOADING':\n            return {\n                ...state,\n                loading: true,\n            };\n        default:\n            return state;\n    }\n}","const initialState = {\n    msg: {},\n    status: null,\n    id: null\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case 'GET_ERRORS':\n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n        case 'CLEAR_ERRORS':\n            return {\n                msg: {},\n                status: null,\n                id: null\n            }\n        default:\n            return state\n    }\n}","const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case 'USER_LOADING':\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case 'USER_LOADED':\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n            };\n        case 'SIGNIN_SUCCESS':\n        case 'SIGNUP_SUCCESS':\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false\n            };\n        case 'AUTH_ERROR':\n        case 'SIGNIN_FAIL':\n        case 'SIGNOUT_SUCCESS':\n        case 'SIGNUP_FAIL':\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            }\n        default:\n            return state\n    }\n}","const initialState = {\n    posts: [],\n    loading: false // time to fetch data\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case 'GET_POSTS':\n            return {\n                ...state,\n                posts: action.payload,\n                loading: false\n            };\n        case 'ADD_POST':\n            return {\n                ...state,\n                posts: [action.payload, ...state.posts]\n            };\n        case 'POSTS_LOADING':\n            return {\n                ...state,\n                loading: true,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport bookReducer from './bookReducer';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\nimport postReducer from './postReducer';\n\nexport default combineReducers({\n    book: bookReducer,\n    error: errorReducer,\n    auth: authReducer,\n    post: postReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AppNavbar from './components/layout/AppNavbar';\nimport Library from './components/library/Library';\nimport Signup from './components/auth/Signup';\nimport Signin from './components/auth/Signin';\nimport Home from './components/home/Home';\nimport Explore from './components/explore/Explore';\nimport Profile from './components/profile/Profile';\nimport { loadUser } from './actions/authActions';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n    }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <AppNavbar />\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route path='/library' component={Library} />\n              <Route path='/sign-up' component={Signup} />\n              <Route path='/sign-in' component={Signin} />\n              <Route path='/profile' component={Profile} />\n              <Route path='/explore' component={Explore} />\n            </Switch>\n          </div>\n        </Router>\n        {/* <AppFooter /> */}\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}