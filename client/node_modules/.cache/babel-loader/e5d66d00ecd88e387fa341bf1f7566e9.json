{"ast":null,"code":"import _objectSpread from \"/home/achraf/Documents/Coding/kindleshare/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst initialState = {\n  books: [],\n  loading: false // time to fetch data\n\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case 'GET_BOOKS':\n      return _objectSpread({}, state, {\n        books: action.payload,\n        loading: false\n      });\n    // case 'FETCH_BOOKS':\n    //     return {\n    //         ...state,\n    //         books: action.payload\n    //     };\n\n    case 'ADD_BOOKS':\n      return _objectSpread({}, state, {\n        books: [action.payload, ...state.books]\n      });\n\n    case 'DELETE_BOOK':\n      return _objectSpread({}, state, {\n        books: state.books.filter(book => book._id !== action.payload)\n      });\n\n    case 'BOOKS_LOADING':\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/achraf/Documents/Coding/kindleshare/client/src/reducers/bookReducer.js"],"names":["initialState","books","loading","state","action","type","payload","filter","book","_id"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,KAFQ,CAEF;;AAFE,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,+BACOF,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFlB;AAGIJ,QAAAA,OAAO,EAAE;AAHb;AAKJ;AACA;AACA;AACA;AACA;;AACA,SAAK,WAAL;AACI,+BACOC,KADP;AAEIF,QAAAA,KAAK,EAAE,CAACG,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,KAA1B;AAFX;;AAIJ,SAAK,aAAL;AACI,+BACOE,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAYL,MAAM,CAACE,OAA9C;AAFX;;AAIJ,SAAK,eAAL;AACI,+BACOH,KADP;AAEID,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,aAAOC,KAAP;AA5BR;AA8BH","sourcesContent":["const initialState = {\n    books: [],\n    loading: false // time to fetch data\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case 'GET_BOOKS':\n            return {\n                ...state,\n                books: action.payload,\n                loading: false\n            };\n        // case 'FETCH_BOOKS':\n        //     return {\n        //         ...state,\n        //         books: action.payload\n        //     };\n        case 'ADD_BOOKS':\n            return {\n                ...state,\n                books: [action.payload, ...state.books]\n            };\n        case 'DELETE_BOOK':\n            return {\n                ...state,\n                books: state.books.filter(book => book._id !==action.payload)\n            }\n        case 'BOOKS_LOADING':\n            return {\n                ...state,\n                loading: true,\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}