{"ast":null,"code":"import axios from 'axios';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\nexport const getBooks = () => (dispatch, getState) => {\n  dispatch(setBooksLoading());\n  axios.get('/books', tokenConfig(getState)).then(res => dispatch({\n    type: 'GET_BOOKS',\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const fetchBooks = () => dispatch => {\n  axios.get('/books/kindle').then(res => {\n    dispatch(addBooks(res.data)); // Posting new books to database\n  }).catch(err => console.log(err));\n};\nexport const addBooks = books => (dispatch, getState) => {\n  books.map(book => axios.post('/books', book, tokenConfig(getState)).then(res => dispatch({\n    type: 'ADD_BOOKS',\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status))));\n};\nexport const deleteBook = id => (dispatch, getState) => {\n  axios.delete(`/books/${id}`, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: 'DELETE_BOOK',\n      payload: id\n    });\n  });\n};\nexport const setBooksLoading = () => {\n  return {\n    type: 'BOOKS_LOADING'\n  };\n};","map":{"version":3,"sources":["/home/achraf/Documents/Coding/kindleshare/client/src/actions/bookActions.js"],"names":["axios","tokenConfig","returnErrors","getBooks","dispatch","getState","setBooksLoading","get","then","res","type","payload","data","catch","err","response","status","fetchBooks","addBooks","console","log","books","map","book","post","deleteBook","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClDD,EAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACAN,EAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,EAAoBN,WAAW,CAACI,QAAD,CAA/B,EACKG,IADL,CACUC,GAAG,IAAIL,QAAQ,CAAC;AAClBM,IAAAA,IAAI,EAAE,WADY;AAElBC,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADzB,EAKKC,KALL,CAKWC,GAAG,IAAIV,QAAQ,CAACF,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAL1B;AAMH,CARM;AAUP,OAAO,MAAMC,UAAU,GAAG,MAAMb,QAAQ,IAAI;AACxCJ,EAAAA,KAAK,CAACO,GAAN,CAAU,eAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACTL,IAAAA,QAAQ,CAACc,QAAQ,CAACT,GAAG,CAACG,IAAL,CAAT,CAAR,CADS,CACqB;AACjC,GAHL,EAIKC,KAJL,CAIWC,GAAG,IAAIK,OAAO,CAACC,GAAR,CAAYN,GAAZ,CAJlB;AAKH,CANM;AAQP,OAAO,MAAMI,QAAQ,GAAGG,KAAK,IAAI,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AACrDgB,EAAAA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAIvB,KAAK,CAACwB,IAAN,CAAW,QAAX,EAAqBD,IAArB,EAA2BtB,WAAW,CAACI,QAAD,CAAtC,EACbG,IADa,CACRC,GAAG,IAAIL,QAAQ,CAAC;AAClBM,IAAAA,IAAI,EAAE,WADY;AAElBC,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADP,EAKbC,KALa,CAKPC,GAAG,IAAIV,QAAQ,CAACF,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CALR,CAAlB;AAOH,CARM;AAUP,OAAO,MAAMS,UAAU,GAAGC,EAAE,IAAI,CAACtB,QAAD,EAAWC,QAAX,KAAwB;AACpDL,EAAAA,KAAK,CAAC2B,MAAN,CAAc,UAASD,EAAG,EAA1B,EAA6BzB,WAAW,CAACI,QAAD,CAAxC,EACKG,IADL,CACUC,GAAG,IAAI;AACTL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAE,aADD;AACgBC,MAAAA,OAAO,EAAEe;AADzB,KAAD,CAAR;AAGH,GALL;AAMH,CAPM;AASP,OAAO,MAAMpB,eAAe,GAAG,MAAM;AACjC,SAAO;AACHI,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from 'axios';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\n\nexport const getBooks = () => (dispatch, getState) => {\n    dispatch(setBooksLoading());\n    axios.get('/books', tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'GET_BOOKS',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const fetchBooks = () => dispatch => {\n    axios.get('/books/kindle')\n        .then(res => {\n            dispatch(addBooks(res.data)); // Posting new books to database\n        })\n        .catch(err => console.log(err))\n}\n\nexport const addBooks = books => (dispatch, getState) => {\n    books.map(book => axios.post('/books', book, tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'ADD_BOOKS',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n    )\n};\n\nexport const deleteBook = id => (dispatch, getState) => {\n    axios.delete(`/books/${id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: 'DELETE_BOOK', payload: id\n            })\n        })\n}\n\nexport const setBooksLoading = () => {\n    return {\n        type: 'BOOKS_LOADING'\n    }\n}"]},"metadata":{},"sourceType":"module"}