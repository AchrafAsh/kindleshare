{"ast":null,"code":"import axios from 'axios';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\nexport const getPosts = () => (dispatch, getState) => {\n  dispatch(setPostsLoading());\n  axios.get('/posts', tokenConfig(getState)).then(res => dispatch({\n    type: 'GET_POSTS',\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const getPostsByUserId = userId => (dispatch, getState) => {\n  dispatch(setPostsLoading());\n  axios.get('/posts', {\n    params: {\n      userId: userId\n    }\n  }, tokenConfig(getState)).then(res => dispatch({\n    type: 'GET_POSTS',\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addPost = post => (dispatch, getState) => {\n  axios.post('/posts', post, tokenConfig(getState)).then(res => dispatch({\n    type: 'ADD_POST',\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const setPostsLoading = () => {\n  return {\n    type: 'POSTS_LOADING'\n  };\n};","map":{"version":3,"sources":["/home/achraf/Documents/Coding/kindleshare/client/src/actions/postActions.js"],"names":["axios","tokenConfig","returnErrors","getPosts","dispatch","getState","setPostsLoading","get","then","res","type","payload","data","catch","err","response","status","getPostsByUserId","userId","params","addPost","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClDD,EAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACAN,EAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,EAAoBN,WAAW,CAACI,QAAD,CAA/B,EACKG,IADL,CACUC,GAAG,IAAIL,QAAQ,CAAC;AAClBM,IAAAA,IAAI,EAAE,WADY;AAElBC,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADzB,EAKKC,KALL,CAKWC,GAAG,IAAIV,QAAQ,CAACF,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAL1B;AAMH,CARM;AAUP,OAAO,MAAMC,gBAAgB,GAAGC,MAAM,IAAI,CAACd,QAAD,EAAWC,QAAX,KAAwB;AAC9DD,EAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACAN,EAAAA,KAAK,CAACO,GAAN,CAAU,QAAV,EAAoB;AAAEY,IAAAA,MAAM,EAAE;AAAED,MAAAA,MAAM,EAAEA;AAAV;AAAV,GAApB,EAAoDjB,WAAW,CAACI,QAAD,CAA/D,EACKG,IADL,CACUC,GAAG,IAAIL,QAAQ,CAAC;AAClBM,IAAAA,IAAI,EAAE,WADY;AAElBC,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADzB,EAKKC,KALL,CAKWC,GAAG,IAAIV,QAAQ,CAACF,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAL1B;AAMH,CARM;AAUP,OAAO,MAAMI,OAAO,GAAGC,IAAI,IAAI,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AACnDL,EAAAA,KAAK,CAACqB,IAAN,CAAW,QAAX,EAAqBA,IAArB,EAA2BpB,WAAW,CAACI,QAAD,CAAtC,EACKG,IADL,CACUC,GAAG,IAAIL,QAAQ,CAAC;AAClBM,IAAAA,IAAI,EAAE,UADY;AAElBC,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CADzB,EAKKC,KALL,CAKWC,GAAG,IAAIV,QAAQ,CAACF,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAL1B;AAMH,CAPM;AASP,OAAO,MAAMV,eAAe,GAAG,MAAM;AACjC,SAAO;AACHI,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from 'axios';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\n\nexport const getPosts = () => (dispatch, getState) => {\n    dispatch(setPostsLoading());\n    axios.get('/posts', tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'GET_POSTS',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const getPostsByUserId = userId => (dispatch, getState) => {\n    dispatch(setPostsLoading());\n    axios.get('/posts', { params: { userId: userId } }, tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'GET_POSTS',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const addPost = post => (dispatch, getState) => {\n    axios.post('/posts', post, tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'ADD_POST',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n};\n\nexport const setPostsLoading = () => {\n    return {\n        type: 'POSTS_LOADING'\n    }\n}"]},"metadata":{},"sourceType":"module"}