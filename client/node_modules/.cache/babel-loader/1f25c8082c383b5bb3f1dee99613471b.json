{"ast":null,"code":"import _classCallCheck from\"/home/achraf/Documents/Coding/kindleshare/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/achraf/Documents/Coding/kindleshare/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/achraf/Documents/Coding/kindleshare/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/achraf/Documents/Coding/kindleshare/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/achraf/Documents/Coding/kindleshare/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Redirect}from'react-router-dom';import{Spinner,Button,Container,Media,NavLink,NavItem,TabContent,TabPane,Nav,Row,Col}from'reactstrap';import classnames from'classnames';import BookShelve from'./BookShelve';import Activity from'./Activity';import{connect}from'react-redux';import{getBooks}from'../../actions/bookActions';import{getPostsByUserId}from'../../actions/postActions';var Profile=/*#__PURE__*/function(_Component){_inherits(Profile,_Component);function Profile(){var _getPrototypeOf2;var _this;_classCallCheck(this,Profile);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Profile)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={activeTab:'1'};_this.toggle=function(tab){if(_this.state.activeTab!==tab){_this.setState({activeTab:tab});}};return _this;}_createClass(Profile,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getBooks();}},{key:\"render\",value:function render(){var _this2=this;var toggle=this.toggle;var activeTab=this.state.activeTab;var books=this.props.book.books;var posts=this.props.post.posts;if(this.props.auth.user==null){return React.createElement(Container,null,React.createElement(Spinner,{color:\"warning\"}));}else{if(this.props.isAuthenticated===false)return React.createElement(Redirect,{to:\"/sign-in\"});return React.createElement(Container,null,React.createElement(Media,{className:\"profile-description\"},React.createElement(Media,{left:true},React.createElement(Media,{className:\"profile-image\",object:true,src:\"https://pbs.twimg.com/profile_images/988775660163252226/XpgonN0X_400x400.jpg\",alt:\"Profile image\"})),React.createElement(Media,{body:true},React.createElement(Media,{heading:true},\"Bill Gates\"),React.createElement(\"p\",null,\"I'm a book lover. I regularly schedule off weeks that I dedicate to reading and catching up on my \\\"To Read List\\\".\",React.createElement(\"br\",null),\"Follow me and you'll get exclusive access to my library\"),React.createElement(Button,{className:\"follow-btn\",size:\"lg\",color:\"warning\"},\"Follow\"))),React.createElement(\"div\",null,React.createElement(Nav,{tabs:true},React.createElement(NavItem,null,React.createElement(NavLink,{className:classnames({active:activeTab==='1'}),onClick:function onClick(){toggle('1');}},\"Library\")),React.createElement(NavItem,null,React.createElement(NavLink,{className:classnames({active:activeTab==='2'}),onClick:function onClick(){toggle('2');_this2.props.getPostsByUserId(_this2.props.auth.user._id);}},\"Posts\"))),React.createElement(TabContent,{activeTab:activeTab},React.createElement(TabPane,{tabId:\"1\"},React.createElement(Row,null,React.createElement(Col,{sm:\"12\"},React.createElement(BookShelve,{books:books})))),React.createElement(TabPane,{tabId:\"2\"},React.createElement(Row,null,React.createElement(Col,{sm:\"12\"},React.createElement(Activity,{posts:posts})))))));}}}]);return Profile;}(Component);var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated,auth:state.auth,book:state.book,post:state.post};};export default connect(mapStateToProps,{getBooks:getBooks,getPostsByUserId:getPostsByUserId})(Profile);","map":{"version":3,"sources":["/home/achraf/Documents/Coding/kindleshare/client/src/components/profile/Profile.js"],"names":["React","Component","Redirect","Spinner","Button","Container","Media","NavLink","NavItem","TabContent","TabPane","Nav","Row","Col","classnames","BookShelve","Activity","connect","getBooks","getPostsByUserId","Profile","state","activeTab","toggle","tab","setState","props","books","book","posts","post","auth","user","isAuthenticated","active","_id","mapStateToProps"],"mappings":"6pBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,OAAT,CAAkBC,MAAlB,CAA0BC,SAA1B,CAAqCC,KAArC,CAA4CC,OAA5C,CAAqDC,OAArD,CAA8DC,UAA9D,CAA0EC,OAA1E,CAAmFC,GAAnF,CAAwFC,GAAxF,CAA6FC,GAA7F,KAAwG,YAAxG,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,2BAAzB,CACA,OAASC,gBAAT,KAAiC,2BAAjC,C,GAGMC,CAAAA,O,mYACFC,K,CAAQ,CACJC,SAAS,CAAE,GADP,C,OAiBRC,M,CAAS,SAAAC,GAAG,CAAI,CACZ,GAAG,MAAKH,KAAL,CAAWC,SAAX,GAAyBE,GAA5B,CAAiC,CAC7B,MAAKC,QAAL,CAAc,CAAEH,SAAS,CAAEE,GAAb,CAAd,EACH,CACJ,C,gGARkB,CACf,KAAKE,KAAL,CAAWR,QAAX,GACH,C,uCAQQ,iBACL,GAAMK,CAAAA,MAAM,CAAG,KAAKA,MAApB,CACA,GAAMD,CAAAA,SAAS,CAAG,KAAKD,KAAL,CAAWC,SAA7B,CAFK,GAGGK,CAAAA,KAHH,CAGa,KAAKD,KAAL,CAAWE,IAHxB,CAGGD,KAHH,IAIGE,CAAAA,KAJH,CAIa,KAAKH,KAAL,CAAWI,IAJxB,CAIGD,KAJH,CAKL,GAAI,KAAKH,KAAL,CAAWK,IAAX,CAAgBC,IAAhB,EAAwB,IAA5B,CAAiC,CAC7B,MAAO,qBAAC,SAAD,MAAW,oBAAC,OAAD,EAAS,KAAK,CAAC,SAAf,EAAX,CAAP,CACH,CAFD,IAEO,CACH,GAAI,KAAKN,KAAL,CAAWO,eAAX,GAA+B,KAAnC,CAA0C,MAAO,qBAAC,QAAD,EAAU,EAAE,CAAC,UAAb,EAAP,CAC9C,MACI,qBAAC,SAAD,MACI,oBAAC,KAAD,EAAO,SAAS,CAAC,qBAAjB,EACI,oBAAC,KAAD,EAAO,IAAI,KAAX,EACI,oBAAC,KAAD,EAAO,SAAS,CAAC,eAAjB,CAAiC,MAAM,KAAvC,CAAwC,GAAG,CAAC,8EAA5C,CAA2H,GAAG,CAAC,eAA/H,EADJ,CADJ,CAII,oBAAC,KAAD,EAAO,IAAI,KAAX,EACI,oBAAC,KAAD,EAAO,OAAO,KAAd,eADJ,CAII,mJAEI,8BAFJ,2DAJJ,CAQI,oBAAC,MAAD,EAAQ,SAAS,CAAC,YAAlB,CAA+B,IAAI,CAAC,IAApC,CAAyC,KAAK,CAAC,SAA/C,WARJ,CAJJ,CADJ,CAgBI,+BACI,oBAAC,GAAD,EAAK,IAAI,KAAT,EACI,oBAAC,OAAD,MACI,oBAAC,OAAD,EACI,SAAS,CAAEnB,UAAU,CAAC,CAAEoB,MAAM,CAAEZ,SAAS,GAAK,GAAxB,CAAD,CADzB,CAEI,OAAO,CAAE,kBAAM,CAAEC,MAAM,CAAC,GAAD,CAAN,CAAc,CAFnC,YADJ,CADJ,CASI,oBAAC,OAAD,MACA,oBAAC,OAAD,EACI,SAAS,CAAET,UAAU,CAAC,CAAEoB,MAAM,CAAEZ,SAAS,GAAK,GAAxB,CAAD,CADzB,CAEI,OAAO,CAAE,kBAAM,CACXC,MAAM,CAAC,GAAD,CAAN,CACA,MAAI,CAACG,KAAL,CAAWP,gBAAX,CAA4B,MAAI,CAACO,KAAL,CAAWK,IAAX,CAAgBC,IAAhB,CAAqBG,GAAjD,EACH,CALL,UADA,CATJ,CADJ,CAsBI,oBAAC,UAAD,EAAY,SAAS,CAAEb,SAAvB,EACI,oBAAC,OAAD,EAAS,KAAK,CAAC,GAAf,EACA,oBAAC,GAAD,MACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,EACI,oBAAC,UAAD,EAAY,KAAK,CAAEK,KAAnB,EADJ,CADJ,CADA,CADJ,CAQI,oBAAC,OAAD,EAAS,KAAK,CAAC,GAAf,EACA,oBAAC,GAAD,MACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,EACI,oBAAC,QAAD,EAAU,KAAK,CAAEE,KAAjB,EADJ,CADJ,CADA,CARJ,CAtBJ,CAhBJ,CADJ,CAyDE,CACL,C,qBA3FiB5B,S,EA8FtB,GAAMmC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAf,KAAK,QAAK,CAC9BY,eAAe,CAAEZ,KAAK,CAACU,IAAN,CAAWE,eADE,CAE9BF,IAAI,CAAEV,KAAK,CAACU,IAFkB,CAG9BH,IAAI,CAAEP,KAAK,CAACO,IAHkB,CAI9BE,IAAI,CAAET,KAAK,CAACS,IAJkB,CAAL,EAA7B,CAOA,cAAeb,CAAAA,OAAO,CAACmB,eAAD,CAAkB,CAAElB,QAAQ,CAARA,QAAF,CAAYC,gBAAgB,CAAhBA,gBAAZ,CAAlB,CAAP,CAAyDC,OAAzD,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Spinner, Button, Container, Media, NavLink, NavItem, TabContent, TabPane, Nav, Row, Col } from 'reactstrap'\nimport classnames from 'classnames';\nimport BookShelve from './BookShelve';\nimport Activity from './Activity';\nimport { connect } from 'react-redux';\nimport { getBooks } from '../../actions/bookActions';\nimport { getPostsByUserId } from '../../actions/postActions';\nimport PropTypes from 'prop-types'\n\nclass Profile extends Component {\n    state = {\n        activeTab: '1',\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        auth: PropTypes.object.isRequired,\n        book: PropTypes.object.isRequired,\n        post: PropTypes.object.isRequired,\n        getBooks: PropTypes.func.isRequired,\n        getPostsByUserId: PropTypes.func.isRequired,\n    }\n\n    componentDidMount(){\n        this.props.getBooks();\n    }\n\n    toggle = tab => {\n        if(this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n\n    render() {\n        const toggle = this.toggle;\n        const activeTab = this.state.activeTab;\n        const { books } = this.props.book;\n        const { posts } = this.props.post;\n        if (this.props.auth.user == null){\n            return <Container><Spinner color=\"warning\" /></Container>;\n        } else {\n            if (this.props.isAuthenticated === false) return <Redirect to=\"/sign-in\"/>\n        return (\n            <Container>\n                <Media className=\"profile-description\">\n                    <Media left>\n                        <Media className=\"profile-image\" object src=\"https://pbs.twimg.com/profile_images/988775660163252226/XpgonN0X_400x400.jpg\" alt=\"Profile image\" />\n                    </Media>\n                    <Media body>\n                        <Media heading>\n                            Bill Gates\n                        </Media>\n                        <p>\n                            I'm a book lover. I regularly schedule off weeks that I dedicate to reading and catching up on my \"To Read List\".\n                            <br />Follow me and you'll get exclusive access to my library\n                        </p>\n                        <Button className=\"follow-btn\" size=\"lg\" color=\"warning\">Follow</Button>\n                    </Media>\n                </Media>\n                <div>\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: activeTab === '1' })}\n                                onClick={() => { toggle('1'); }}\n                            >\n                                Library\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '2' })}\n                            onClick={() => { \n                                toggle('2');\n                                this.props.getPostsByUserId(this.props.auth.user._id)\n                            }}\n                        >\n                            Posts\n                        </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm=\"12\">\n                                <BookShelve books={books} />\n                            </Col>\n                        </Row>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                        <Row>\n                            <Col sm=\"12\">\n                                <Activity posts={posts} />\n                            </Col>\n                        </Row>\n                        </TabPane>\n                    </TabContent>\n                </div>\n            </Container>\n        )}\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    auth: state.auth,\n    book: state.book,\n    post: state.post,\n})\n\nexport default connect(mapStateToProps, { getBooks, getPostsByUserId })(Profile);"]},"metadata":{},"sourceType":"module"}