{"ast":null,"code":"var _jsxFileName = \"/home/achraf/Documents/Coding/kindleshare/client/src/components/auth/Signin.js\";\nimport React, { Component } from 'react';\nimport { Container, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { signin } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.props.clearErrors();\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const user = {\n        email,\n        password\n      };\n      this.props.signin(user);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const error = this.props.error;\n\n    if (error !== prevProps.error) {\n      if (error.id === 'SIGNIN_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    if (this.props.isAuthenticated) return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.msg ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.msg) : null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      onChange: this.handleChange,\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Pasword\"), React.createElement(Input, {\n      onChange: this.handleChange,\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nSignin.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  signin: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  signin,\n  clearErrors\n})(Signin);","map":{"version":3,"sources":["/home/achraf/Documents/Coding/kindleshare/client/src/components/auth/Signin.js"],"names":["React","Component","Container","Form","FormGroup","Label","Input","Button","Alert","Redirect","connect","PropTypes","signin","clearErrors","Signin","state","email","password","msg","handleChange","e","setState","target","name","value","handleSubmit","props","preventDefault","user","componentDidUpdate","prevProps","error","id","render","isAuthenticated","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { signin } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions'\n\nclass Signin extends Component {\n    state = {\n        email: '',\n        password: '',\n        msg: null\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        signin: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error } = this.props;\n        if(error !== prevProps.error) {\n            if(error.id === 'SIGNIN_FAIL') {\n                this.setState({ msg: error.msg.msg })\n            } else {\n                this.setState({ msg: null })\n            }\n        }\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        this.props.clearErrors();\n        e.preventDefault();\n        const { email, password } = this.state;\n        const user = {\n            email,\n            password\n        };\n        this.props.signin(user);\n    }\n\n    render() {\n        if (this.props.isAuthenticated) return <Redirect to=\"/\"/>\n        return (\n            <Container>\n                {  this.state.msg ? <Alert color=\"danger\">{ this.state.msg }</Alert> : null }\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"name\">Email</Label>\n                        <Input onChange={this.handleChange} type=\"email\" name=\"email\" placeholder=\"Email\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\">Pasword</Label>\n                        <Input onChange={this.handleChange} type=\"password\" name=\"password\" placeholder=\"Password\" />\n                    </FormGroup>\n                    <Button>Login</Button>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\n\nexport default connect(mapStateToProps, { signin, clearErrors })(Signin);"]},"metadata":{},"sourceType":"module"}