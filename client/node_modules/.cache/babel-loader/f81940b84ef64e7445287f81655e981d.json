{"ast":null,"code":"import axios from'axios';import{tokenConfig}from'./authActions';import{returnErrors}from'./errorActions';export var getBooks=function getBooks(){return function(dispatch,getState){dispatch(setBooksLoading());axios.get('/books',tokenConfig(getState)).then(function(res){return dispatch({type:'GET_BOOKS',payload:res.data});}).catch(function(err){return dispatch(returnErrors(err.response.data,err.response.status));});};};export var fetchBooks=function fetchBooks(){return function(dispatch){axios.get('/books/kindle').then(function(res){dispatch(addBooks(res.data));// Posting new books to database\n}).catch(function(err){return console.log(err);});};};export var addBooks=function addBooks(books){return function(dispatch,getState){books.map(function(book){return axios.post('/books',book,tokenConfig(getState)).then(function(res){return dispatch({type:'ADD_BOOKS',payload:res.data});}).catch(function(err){return dispatch(returnErrors(err.response.data,err.response.status));});});};};export var deleteBook=function deleteBook(id){return function(dispatch,getState){axios.delete(\"/books/\".concat(id),tokenConfig(getState)).then(function(res){dispatch({type:'DELETE_BOOK',payload:id});});};};export var setBooksLoading=function setBooksLoading(){return{type:'BOOKS_LOADING'};};","map":{"version":3,"sources":["/home/achraf/Documents/Coding/kindleshare/client/src/actions/bookActions.js"],"names":["axios","tokenConfig","returnErrors","getBooks","dispatch","getState","setBooksLoading","get","then","res","type","payload","data","catch","err","response","status","fetchBooks","addBooks","console","log","books","map","book","post","deleteBook","id","delete"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAM,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAClDD,QAAQ,CAACE,eAAe,EAAhB,CAAR,CACAN,KAAK,CAACO,GAAN,CAAU,QAAV,CAAoBN,WAAW,CAACI,QAAD,CAA/B,EACKG,IADL,CACU,SAAAC,GAAG,QAAIL,CAAAA,QAAQ,CAAC,CAClBM,IAAI,CAAE,WADY,CAElBC,OAAO,CAAEF,GAAG,CAACG,IAFK,CAAD,CAAZ,EADb,EAKKC,KALL,CAKW,SAAAC,GAAG,QAAIV,CAAAA,QAAQ,CAACF,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,CAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAZ,EALd,EAMH,CARuB,EAAjB,CAUP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAM,UAAAb,QAAQ,CAAI,CACxCJ,KAAK,CAACO,GAAN,CAAU,eAAV,EACKC,IADL,CACU,SAAAC,GAAG,CAAI,CACTL,QAAQ,CAACc,QAAQ,CAACT,GAAG,CAACG,IAAL,CAAT,CAAR,CAA8B;AACjC,CAHL,EAIKC,KAJL,CAIW,SAAAC,GAAG,QAAIK,CAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ,CAAJ,EAJd,EAKH,CANyB,EAAnB,CAQP,MAAO,IAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAG,KAAK,QAAI,UAACjB,QAAD,CAAWC,QAAX,CAAwB,CACrDgB,KAAK,CAACC,GAAN,CAAU,SAAAC,IAAI,QAAIvB,CAAAA,KAAK,CAACwB,IAAN,CAAW,QAAX,CAAqBD,IAArB,CAA2BtB,WAAW,CAACI,QAAD,CAAtC,EACbG,IADa,CACR,SAAAC,GAAG,QAAIL,CAAAA,QAAQ,CAAC,CAClBM,IAAI,CAAE,WADY,CAElBC,OAAO,CAAEF,GAAG,CAACG,IAFK,CAAD,CAAZ,EADK,EAKbC,KALa,CAKP,SAAAC,GAAG,QAAIV,CAAAA,QAAQ,CAACF,YAAY,CAACY,GAAG,CAACC,QAAJ,CAAaH,IAAd,CAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAZ,EALI,CAAJ,EAAd,EAOH,CAR4B,EAAtB,CAUP,MAAO,IAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,EAAE,QAAI,UAACtB,QAAD,CAAWC,QAAX,CAAwB,CACpDL,KAAK,CAAC2B,MAAN,kBAAuBD,EAAvB,EAA6BzB,WAAW,CAACI,QAAD,CAAxC,EACKG,IADL,CACU,SAAAC,GAAG,CAAI,CACTL,QAAQ,CAAC,CACLM,IAAI,CAAE,aADD,CACgBC,OAAO,CAAEe,EADzB,CAAD,CAAR,CAGH,CALL,EAMH,CAP2B,EAArB,CASP,MAAO,IAAMpB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACjC,MAAO,CACHI,IAAI,CAAE,eADH,CAAP,CAGH,CAJM","sourcesContent":["import axios from 'axios';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\n\nexport const getBooks = () => (dispatch, getState) => {\n    dispatch(setBooksLoading());\n    axios.get('/books', tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'GET_BOOKS',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const fetchBooks = () => dispatch => {\n    axios.get('/books/kindle')\n        .then(res => {\n            dispatch(addBooks(res.data)); // Posting new books to database\n        })\n        .catch(err => console.log(err))\n}\n\nexport const addBooks = books => (dispatch, getState) => {\n    books.map(book => axios.post('/books', book, tokenConfig(getState))\n        .then(res => dispatch({\n            type: 'ADD_BOOKS',\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status)))\n    )\n};\n\nexport const deleteBook = id => (dispatch, getState) => {\n    axios.delete(`/books/${id}`, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: 'DELETE_BOOK', payload: id\n            })\n        })\n}\n\nexport const setBooksLoading = () => {\n    return {\n        type: 'BOOKS_LOADING'\n    }\n}"]},"metadata":{},"sourceType":"module"}