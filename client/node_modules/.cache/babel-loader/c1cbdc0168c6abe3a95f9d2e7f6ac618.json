{"ast":null,"code":"var _jsxFileName = \"/home/achraf/Documents/Coding/kindleshare/client/src/components/profile/Profile.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Spinner, Button, Container, Media, NavLink, NavItem, TabContent, TabPane, Nav, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport BookShelve from './BookShelve';\nimport Activity from './Activity';\nimport { connect } from 'react-redux';\nimport { getBooks } from '../../actions/bookActions';\nimport { getPostsByUserId } from '../../actions/postActions';\nimport PropTypes from 'prop-types';\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: '1'\n    };\n\n    this.toggle = tab => {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getBooks();\n  }\n\n  render() {\n    const toggle = this.toggle;\n    const activeTab = this.state.activeTab;\n    const books = this.props.book.books;\n    const posts = this.props.post.posts;\n\n    if (this.props.auth.user == null) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    } else {\n      if (this.props.isAuthenticated === false) return React.createElement(Redirect, {\n        to: \"/sign-in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Media, {\n        className: \"profile-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Media, {\n        left: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Media, {\n        className: \"profile-image\",\n        object: true,\n        src: \"https://pbs.twimg.com/profile_images/988775660163252226/XpgonN0X_400x400.jpg\",\n        alt: \"Profile image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(Media, {\n        body: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Media, {\n        heading: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Bill Gates\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"I'm a book lover. I regularly schedule off weeks that I dedicate to reading and catching up on my \\\"To Read List\\\".\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), \"Follow me and you'll get exclusive access to my library\"), React.createElement(Button, {\n        className: \"follow-btn\",\n        size: \"lg\",\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Follow\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: activeTab === '1'\n        }),\n        onClick: () => {\n          toggle('1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Library\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: activeTab === '2'\n        }),\n        onClick: () => {\n          toggle('2');\n          this.props.getPostsByUserId(this.props.auth.user._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Posts\"))), React.createElement(TabContent, {\n        activeTab: activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(BookShelve, {\n        books: books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Activity, {\n        posts: posts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })))))));\n    }\n  }\n\n}\n\nProfile.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  auth: PropTypes.object.isRequired,\n  book: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  getBooks: PropTypes.func.isRequired,\n  getPostsByUserId: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  auth: state.auth,\n  book: state.book,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getBooks,\n  getPostsByUserId\n})(Profile);","map":{"version":3,"sources":["/home/achraf/Documents/Coding/kindleshare/client/src/components/profile/Profile.js"],"names":["React","Component","Redirect","Spinner","Button","Container","Media","NavLink","NavItem","TabContent","TabPane","Nav","Row","Col","classnames","BookShelve","Activity","connect","getBooks","getPostsByUserId","PropTypes","Profile","state","activeTab","toggle","tab","setState","componentDidMount","props","render","books","book","posts","post","auth","user","isAuthenticated","active","_id","propTypes","bool","object","isRequired","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,SAA1B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,OAArD,EAA8DC,UAA9D,EAA0EC,OAA1E,EAAmFC,GAAnF,EAAwFC,GAAxF,EAA6FC,GAA7F,QAAwG,YAAxG;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAN,SAAsBpB,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BqB,KAD4B,GACpB;AACJC,MAAAA,SAAS,EAAE;AADP,KADoB;;AAAA,SAkB5BC,MAlB4B,GAkBnBC,GAAG,IAAI;AACZ,UAAG,KAAKH,KAAL,CAAWC,SAAX,KAAyBE,GAA5B,EAAiC;AAC7B,aAAKC,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAEE;AAAb,SAAd;AACH;AACJ,KAtB2B;AAAA;;AAc5BE,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWV,QAAX;AACH;;AAQDW,EAAAA,MAAM,GAAG;AACL,UAAML,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMD,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA7B;AAFK,UAGGO,KAHH,GAGa,KAAKF,KAAL,CAAWG,IAHxB,CAGGD,KAHH;AAAA,UAIGE,KAJH,GAIa,KAAKJ,KAAL,CAAWK,IAJxB,CAIGD,KAJH;;AAKL,QAAI,KAAKJ,KAAL,CAAWM,IAAX,CAAgBC,IAAhB,IAAwB,IAA5B,EAAiC;AAC7B,aAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAW,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX,CAAP;AACH,KAFD,MAEO;AACH,UAAI,KAAKP,KAAL,CAAWQ,eAAX,KAA+B,KAAnC,EAA0C,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAC9C,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAiC,QAAA,MAAM,MAAvC;AAAwC,QAAA,GAAG,EAAC,8EAA5C;AAA2H,QAAA,GAAG,EAAC,eAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gIAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,4DAJJ,EAQI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,IAAI,EAAC,IAApC;AAAyC,QAAA,KAAK,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,CAJJ,CADJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AACI,QAAA,SAAS,EAAEtB,UAAU,CAAC;AAAEuB,UAAAA,MAAM,EAAEd,SAAS,KAAK;AAAxB,SAAD,CADzB;AAEI,QAAA,OAAO,EAAE,MAAM;AAAEC,UAAAA,MAAM,CAAC,GAAD,CAAN;AAAc,SAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EASI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD;AACI,QAAA,SAAS,EAAEV,UAAU,CAAC;AAAEuB,UAAAA,MAAM,EAAEd,SAAS,KAAK;AAAxB,SAAD,CADzB;AAEI,QAAA,OAAO,EAAE,MAAM;AACXC,UAAAA,MAAM,CAAC,GAAD,CAAN;AACA,eAAKI,KAAL,CAAWT,gBAAX,CAA4B,KAAKS,KAAL,CAAWM,IAAX,CAAgBC,IAAhB,CAAqBG,GAAjD;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,CATJ,CADJ,EAsBI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEf,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEO,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADA,CADJ,EAQI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADA,CARJ,CAtBJ,CAhBJ,CADJ;AAyDE;AACL;;AA3F2B;;AAA1BX,O,CAKKkB,S,GAAY;AACfH,EAAAA,eAAe,EAAEhB,SAAS,CAACoB,IADZ;AAEfN,EAAAA,IAAI,EAAEd,SAAS,CAACqB,MAAV,CAAiBC,UAFR;AAGfX,EAAAA,IAAI,EAAEX,SAAS,CAACqB,MAAV,CAAiBC,UAHR;AAIfT,EAAAA,IAAI,EAAEb,SAAS,CAACqB,MAAV,CAAiBC,UAJR;AAKfxB,EAAAA,QAAQ,EAAEE,SAAS,CAACuB,IAAV,CAAeD,UALV;AAMfvB,EAAAA,gBAAgB,EAAEC,SAAS,CAACuB,IAAV,CAAeD;AANlB,C;;AAyFvB,MAAME,eAAe,GAAGtB,KAAK,KAAK;AAC9Bc,EAAAA,eAAe,EAAEd,KAAK,CAACY,IAAN,CAAWE,eADE;AAE9BF,EAAAA,IAAI,EAAEZ,KAAK,CAACY,IAFkB;AAG9BH,EAAAA,IAAI,EAAET,KAAK,CAACS,IAHkB;AAI9BE,EAAAA,IAAI,EAAEX,KAAK,CAACW;AAJkB,CAAL,CAA7B;;AAOA,eAAehB,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CAAyDE,OAAzD,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Spinner, Button, Container, Media, NavLink, NavItem, TabContent, TabPane, Nav, Row, Col } from 'reactstrap'\nimport classnames from 'classnames';\nimport BookShelve from './BookShelve';\nimport Activity from './Activity';\nimport { connect } from 'react-redux';\nimport { getBooks } from '../../actions/bookActions';\nimport { getPostsByUserId } from '../../actions/postActions';\nimport PropTypes from 'prop-types'\n\nclass Profile extends Component {\n    state = {\n        activeTab: '1',\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        auth: PropTypes.object.isRequired,\n        book: PropTypes.object.isRequired,\n        post: PropTypes.object.isRequired,\n        getBooks: PropTypes.func.isRequired,\n        getPostsByUserId: PropTypes.func.isRequired,\n    }\n\n    componentDidMount(){\n        this.props.getBooks();\n    }\n\n    toggle = tab => {\n        if(this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n\n    render() {\n        const toggle = this.toggle;\n        const activeTab = this.state.activeTab;\n        const { books } = this.props.book;\n        const { posts } = this.props.post;\n        if (this.props.auth.user == null){\n            return <Container><Spinner color=\"warning\" /></Container>;\n        } else {\n            if (this.props.isAuthenticated === false) return <Redirect to=\"/sign-in\"/>\n        return (\n            <Container>\n                <Media className=\"profile-description\">\n                    <Media left>\n                        <Media className=\"profile-image\" object src=\"https://pbs.twimg.com/profile_images/988775660163252226/XpgonN0X_400x400.jpg\" alt=\"Profile image\" />\n                    </Media>\n                    <Media body>\n                        <Media heading>\n                            Bill Gates\n                        </Media>\n                        <p>\n                            I'm a book lover. I regularly schedule off weeks that I dedicate to reading and catching up on my \"To Read List\".\n                            <br />Follow me and you'll get exclusive access to my library\n                        </p>\n                        <Button className=\"follow-btn\" size=\"lg\" color=\"warning\">Follow</Button>\n                    </Media>\n                </Media>\n                <div>\n                    <Nav tabs>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: activeTab === '1' })}\n                                onClick={() => { toggle('1'); }}\n                            >\n                                Library\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === '2' })}\n                            onClick={() => { \n                                toggle('2');\n                                this.props.getPostsByUserId(this.props.auth.user._id)\n                            }}\n                        >\n                            Posts\n                        </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm=\"12\">\n                                <BookShelve books={books} />\n                            </Col>\n                        </Row>\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                        <Row>\n                            <Col sm=\"12\">\n                                <Activity posts={posts} />\n                            </Col>\n                        </Row>\n                        </TabPane>\n                    </TabContent>\n                </div>\n            </Container>\n        )}\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    auth: state.auth,\n    book: state.book,\n    post: state.post,\n})\n\nexport default connect(mapStateToProps, { getBooks, getPostsByUserId })(Profile);"]},"metadata":{},"sourceType":"module"}