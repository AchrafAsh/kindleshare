{"ast":null,"code":"var _jsxFileName = \"/home/achraf/Documents/Coding/kindleshare/client/src/components/home/NewPostModal.js\";\nimport React, { Component } from 'react';\nimport { Modal, ModalBody, ModalFooter, InputGroup, InputGroupButtonDropdown, Input, Button, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass NewPostModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      bookDropdownOpen: false,\n      highlightDropdownOpen: false,\n      bookToShare: null,\n      highlightToShare: \"\",\n      comment: \"\"\n    };\n\n    this.openPostModal = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.toggleBookDropDown = () => {\n      this.setState({\n        bookDropdownOpen: !this.state.bookDropdownOpen\n      });\n    };\n\n    this.toggleHighlightDropDown = () => {\n      this.setState({\n        highlightDropdownOpen: !this.state.highlightDropdownOpen\n      });\n    };\n\n    this.handleCommentChange = e => {\n      this.setState({\n        comment: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // send the post to database!\n\n      const newPost = {\n        username: this.props.user.name,\n        book_id: this.state.bookToShare.book_id,\n        highlight_author: this.state.bookToShare.author,\n        highlight: this.state.highlightToShare,\n        comment: this.state.comment\n      };\n      this.props.addPost(newPost);\n      this.setState({\n        bookToShare: null,\n        highlightToShare: \"\",\n        comment: \"\",\n        modal: false\n      });\n      console.log(newPost);\n    };\n  }\n\n  render() {\n    const books = this.props.books;\n    const _this$state = this.state,\n          bookToShare = _this$state.bookToShare,\n          highlightToShare = _this$state.highlightToShare;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"warning\",\n      onClick: this.openPostModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Share insight\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.openPostModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, bookToShare ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, highlightToShare), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"- \", bookToShare.author)) : null), React.createElement(Input, {\n      onChange: this.handleCommentChange,\n      value: this.state.comment,\n      placeholder: \"Share your thoughts...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(InputGroupButtonDropdown, {\n      addonType: \"append\",\n      isOpen: this.state.bookDropdownOpen,\n      toggle: this.toggleBookDropDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Choose a Book\"), React.createElement(DropdownMenu, {\n      className: \"drop-down-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, books.map(book => React.createElement(DropdownItem, {\n      onClick: () => this.setState({\n        bookToShare: book\n      }),\n      key: book.book_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, book.title)))), React.createElement(Input, {\n      readOnly: true,\n      value: bookToShare ? bookToShare.title : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(InputGroupButtonDropdown, {\n      addonType: \"append\",\n      isOpen: this.state.highlightDropdownOpen,\n      toggle: this.toggleHighlightDropDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Choose a Highlight\"), React.createElement(DropdownMenu, {\n      className: \"drop-down-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, bookToShare ? bookToShare.highlights.map((highlight, index) => React.createElement(DropdownItem, {\n      key: index,\n      onClick: () => this.setState({\n        highlightToShare: highlight\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, highlight)) : React.createElement(DropdownItem, {\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Choose a book first\"))), React.createElement(Button, {\n      className: \"ml-3\",\n      onClick: this.handleSubmit,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Share\")))));\n  }\n\n}\n\nexport default NewPostModal;","map":{"version":3,"sources":["/home/achraf/Documents/Coding/kindleshare/client/src/components/home/NewPostModal.js"],"names":["React","Component","Modal","ModalBody","ModalFooter","InputGroup","InputGroupButtonDropdown","Input","Button","DropdownToggle","DropdownMenu","DropdownItem","NewPostModal","state","modal","bookDropdownOpen","highlightDropdownOpen","bookToShare","highlightToShare","comment","openPostModal","setState","toggleBookDropDown","toggleHighlightDropDown","handleCommentChange","e","target","value","handleSubmit","preventDefault","newPost","username","props","user","name","book_id","highlight_author","author","highlight","addPost","console","log","render","books","map","book","title","highlights","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n    Modal,\n    ModalBody,\n    ModalFooter,\n    InputGroup,\n    InputGroupButtonDropdown,\n    Input,\n    Button,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n   } from 'reactstrap';\n\nclass NewPostModal extends Component {\n    state = {\n        modal: false,\n        bookDropdownOpen: false,\n        highlightDropdownOpen: false,\n        bookToShare: null,\n        highlightToShare: \"\",\n        comment: \"\"\n    }\n\n    openPostModal = () => {\n        this.setState({ modal: !this.state.modal });\n    }\n\n    toggleBookDropDown = () => {\n        this.setState({ bookDropdownOpen: !this.state.bookDropdownOpen })\n    }\n    toggleHighlightDropDown = () => {\n        this.setState({ highlightDropdownOpen: !this.state.highlightDropdownOpen });\n    }\n\n    handleCommentChange = e => {\n        this.setState({ comment: e.target.value });\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        // send the post to database!\n        const newPost = {\n            username: this.props.user.name,\n            book_id: this.state.bookToShare.book_id,\n            highlight_author: this.state.bookToShare.author,\n            highlight: this.state.highlightToShare,\n            comment: this.state.comment\n        }\n        this.props.addPost(newPost);\n\n        this.setState({\n            bookToShare: null,\n            highlightToShare: \"\",\n            comment: \"\",\n            modal: false\n        })\n        console.log(newPost);\n    }\n\n    render(){\n        const books = this.props.books;\n        const { bookToShare, highlightToShare } = this.state;\n        return (\n        <div>\n            <Button color=\"warning\" onClick={this.openPostModal}>Share insight</Button>\n            <Modal isOpen={this.state.modal} toggle={this.openPostModal}>\n                {/* <ModalHeader toggle={this.openPostModal}>Title</ModalHeader> */}\n                <ModalBody>   \n                        <blockquote>\n                            { bookToShare ? \n                                <div>\n                                    <p className=\"highlight\">{highlightToShare}</p>\n                                    <footer>- {bookToShare.author}</footer>\n                                </div>\n                                : null }\n                        </blockquote>\n                    <Input onChange={this.handleCommentChange} value={this.state.comment} placeholder=\"Share your thoughts...\" />\n                </ModalBody>\n                <ModalFooter>\n                    <InputGroup>\n                        <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.bookDropdownOpen} toggle={this.toggleBookDropDown}>\n                            <DropdownToggle caret>\n                                Choose a Book\n                            </DropdownToggle>\n                            <DropdownMenu className=\"drop-down-menu\">\n                                { books.map(book => (\n                                        <DropdownItem onClick={() => this.setState({ bookToShare: book })} key={book.book_id}>{book.title}</DropdownItem>\n                                    ))\n                                }\n                            </DropdownMenu>\n                        </InputGroupButtonDropdown>\n                        <Input readOnly value={bookToShare ? bookToShare.title : \"\"} />\n                    </InputGroup>\n\n                    <InputGroup>\n                        <InputGroupButtonDropdown addonType=\"append\" isOpen={this.state.highlightDropdownOpen} toggle={this.toggleHighlightDropDown}>\n                            <DropdownToggle caret>\n                                Choose a Highlight\n                            </DropdownToggle>\n                            <DropdownMenu className=\"drop-down-menu\" >\n                                {\n                                    bookToShare ? bookToShare.highlights.map((highlight, index) => (\n                                        <DropdownItem key={index} onClick={() => this.setState({ highlightToShare: highlight })} >\n                                            {highlight}\n                                        </DropdownItem>\n                                    )) \n                                    : <DropdownItem disabled>Choose a book first</DropdownItem>\n                                }\n                            </DropdownMenu>\n                        </InputGroupButtonDropdown>\n                        <Button className=\"ml-3\" onClick={this.handleSubmit} color=\"secondary\">Share</Button>\n                    </InputGroup>\n                </ModalFooter>\n            </Modal>\n\n            \n        </div>\n        )}\n  }\n\nexport default NewPostModal;"]},"metadata":{},"sourceType":"module"}